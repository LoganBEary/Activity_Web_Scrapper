{"version":3,"sources":["Components/Header.js","Components/Card.js","Components/Output.js","Components/PopUp.js","App.js","index.js"],"names":["header","className","DynCard","props","Dtitle","top","width","src","imglink","alt","subt","bodytxt","onClick","_","window","location","href","link","Output","useState","siteData","setData","useEffect","getSites","a","axios","get","then","res","data","Header","charSet","length","map","someData","key","title","img_link","subtxt","body","html_link","console","log","Popup","enteredZip","setEnteredZip","enteredZipTouched","setEnteredZipTouched","containsLetter","setLetter","isSubmitted","setSubmit","regExp","enteredZipIsValid","trim","test","zipEnteredIsInvalid","formIsValid","nameInputClasses","push","to","pathname","Helmet","name","content","onSubmit","event","preventDefault","htmlFor","type","id","onBlur","onChange","target","value","cont","disabled","post","catch","err","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.31c4cfcf.chunk.js","sourcesContent":["import React from 'react'\n\nconst header = () => {\n  return (\n    <div className='header'>\n      <h1> Find Your Local Shinanigans </h1>\n    </div>\n  )\n}\n\nexport default header\n","import React from 'react'\nimport { Card, Button, CardImg, CardTitle, CardText, CardSubtitle, CardBody } from 'reactstrap'\n\nconst DynCard = (props) => {\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle>{props.Dtitle}</CardTitle>\n        <CardImg top width='100%' src={props.imglink} alt='Movie Poster' />\n        <CardSubtitle>{props.subt}</CardSubtitle>\n        <CardText>{props.bodytxt}</CardText>\n        <Button onClick={(_) => window.location.href = props.link}>Link Btn?</Button>\n      </CardBody>\n    </Card>\n  )\n}\nexport default DynCard\n","import Header from './Header'\nimport React, { Helmet, useEffect, useState } from 'react'\nimport DynCard from './Card.js'\nimport './Output.css'\n// import Back from './Back'\nimport axios from 'axios'\n\nconst Output = () => {\n  const [siteData, setData] = useState([])\n\n  useEffect(() => {\n    getSites()\n  }, [])\n\n  const getSites = async () => {\n    await axios.get('/choices')\n      .then((res) => {\n        setData(res.data)\n      })\n  }\n\n  return (\n    <div>\n      <Header>\n        <Helmet>\n          <meta charSet='utf-8' />\n          <title>Found Activities!</title>\n        </Helmet>\n      </Header>\n      {/*\n          possibly do a div and insert Dynamic cards with parsed data?\n          Main Progress block -> inserting new DynCards with data from scrapped data\n          7/25 - Workaround found -> take data from Beautiful Soup and format in json file\n          which would be read by Output and place those cards into card-space\n        */}\n      <div className='card-space'>\n        {/* Map the data stored in the Json file to the output page */}\n        {siteData && siteData.length > 2 ? siteData.map((someData, key) => <DynCard key={key} className='card' Dtitle={someData.title} imglink={someData.img_link} subt={someData.subtxt} bodytxt={someData.body} link={someData.html_link} />) : console.log('Nope')}\n      </div>\n    </div>\n  )\n}\n\nexport default Output\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport Helmet from 'react-helmet'\nimport './PopUp.css'\nimport { Redirect } from 'react-router-dom'\nimport Header from './Header'\nimport Output from './Output'\n// import Output from './Output'\n\nconst Popup = (props) => {\n  const [enteredZip, setEnteredZip] = useState('')\n  const [enteredZipTouched, setEnteredZipTouched] = useState(false)\n  const [containsLetter, setLetter] = useState(false)\n  const [isSubmitted, setSubmit] = useState(false)\n  const regExp = /[a-zA-Z_]/g\n  const enteredZipIsValid = (enteredZip.trim() !== '' && !regExp.test(enteredZip) && enteredZip.length <= 5)\n  const zipEnteredIsInvalid = ((!enteredZipIsValid && enteredZipTouched) || enteredZip.length > 5)\n\n  let formIsValid = false\n  if (enteredZipIsValid && !containsLetter) {\n    formIsValid = true\n  }\n\n  function zipPostHandler (event) {\n    event.preventDefault()\n    axios.post('/choices', { enteredZip }).then(res => setSubmit(true))\n      .catch(err => console.log(err.data))\n  }\n\n  const zipInputChangeHandler = event => {\n    setEnteredZip(event.target.value)\n    // console.log('in')\n    const cont = regExp.test(event.target.value)\n    if (cont === true) {\n      setLetter(true)\n      // console.log('contains:', containsLetter)\n    } else setLetter(false)\n  }\n\n  const zipInputBlurHandler = _ => {\n    setEnteredZipTouched(true)\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault()\n    setEnteredZipTouched(true)\n    // send zip to backend here\n    // set if valid or not\n    if (!enteredZipIsValid) {\n      return\n    }\n    setEnteredZip('')\n    setEnteredZipTouched(false)\n  }\n\n  const nameInputClasses = zipEnteredIsInvalid || containsLetter\n    ? 'box form-control invalid'\n    : 'box form-control'\n\n  if (isSubmitted) {\n    return (<><Redirect push to={{ pathname: '/output' }} /><Output /></>)\n  }\n  return (\n    <div>\n      <Header />\n      <Helmet>\n        <title>Find Shenanigans </title>\n        <meta name='description' content='App Description' />\n        <meta name='theme-color' content='#008f68' />\n      </Helmet>\n      <form onSubmit={formSubmissionHandler} className='zipForm'>\n        <div className={nameInputClasses}>\n          <label htmlFor='zipcode' className='label-cover'>{props.content}</label>\n          <input\n            className='zip-entry'\n            type='text'\n            id='zip'\n            onBlur={zipInputBlurHandler}\n            onChange={zipInputChangeHandler}\n            value={enteredZip}\n          />\n          <button className='getZip' disabled={!formIsValid} onClick={zipPostHandler}/* onClick={} */>\n            Submit\n          </button>\n          {(zipEnteredIsInvalid || containsLetter)\n            ? <p className='error-text'>Invalid Zipcode</p>\n            : null}\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Popup\n","import './App.css'\nimport GetArea from './Components/PopUp'\nimport { Route } from 'react-router-dom'\nimport { React } from 'react'\n// import data from '../src/Components/data/data.json';\n\nfunction App () {\n  return (\n    <div className='App'>\n      <Route exact path='/'>\n        <GetArea\n          content={<p>Please Enter Your Zip Code</p>}\n        />\n      </Route>\n    </div>\n  )\n}\n// TODO get rid of Redirect and fetch data from JSON\n// Need to fetch json from here,\n// then after submission change\n// it to allow output to show\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n\n)\n"],"sourceRoot":""}