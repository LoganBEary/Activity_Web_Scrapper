{"version":3,"sources":["Components/Header.js","Components/Card.js","Components/Output.js","Components/PopUp.js","App.js","index.js"],"names":["header","className","DynCard","props","src","imgLink","alt","theTitle","href","urlLink","Output","useState","sites","setData","useEffect","getSites","a","axios","get","then","res","data","Header","charSet","map","values","key","title","img_link","url_link","Popup","enteredZip","setEnteredZip","enteredZipTouched","setEnteredZipTouched","containsLetter","setLetter","isSubmitted","setSubmit","regExp","enteredZipIsValid","trim","test","length","zipEnteredIsInvalid","formIsValid","nameInputClasses","push","to","pathname","Helmet","name","content","onSubmit","event","preventDefault","htmlFor","type","id","onBlur","_","onChange","target","value","cont","disabled","onClick","post","catch","err","console","log","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"mUAUeA,EARA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,kE,yBCUSC,G,MAbC,SAACC,GAEf,OACE,sBAAKF,UAAU,YAAf,UACA,qBAAKG,IAAKD,EAAME,QAASC,IAAI,aAC7B,4BAAIH,EAAMI,WAEV,mBAAGC,KAAML,EAAMM,QAAf,SACA,kDC0CWC,G,MA5CA,WAAO,IAAD,EACMC,mBAAS,IADf,mBACZC,EADY,KACLC,EADK,KAGnBC,qBAAU,WACRC,MACC,IAGH,IAAIA,EAAQ,uCAAG,sBAAAC,EAAA,sEACPC,IAAMC,IAAI,YACbC,MAAK,SAACC,GACLP,EAAQO,EAAIC,SAHH,2CAAH,qDASZ,OACE,gCACE,cAACC,EAAD,UACE,eAAC,SAAD,WACE,sBAAMC,QAAQ,UACd,2DAUJ,qBAAKtB,UAAU,aAAf,SAGGW,EAAQA,EAAMY,KAAI,SAACC,EAAQC,GAG1B,OAAQ,cAAC,EAAD,CAAmBzB,UAAU,OAAOM,SAAUkB,EAAOE,MAAOtB,QAASoB,EAAOG,SAAUnB,QAASgB,EAAOI,UAAxFH,MAA0G,YC+C3HI,EApFD,SAAC3B,GAAW,IAAD,EACaQ,mBAAS,IADtB,mBAChBoB,EADgB,KACJC,EADI,OAE2BrB,oBAAS,GAFpC,mBAEhBsB,EAFgB,KAEGC,EAFH,OAGavB,oBAAS,GAHtB,mBAGhBwB,EAHgB,KAGAC,EAHA,OAIUzB,oBAAS,GAJnB,mBAIhB0B,EAJgB,KAIHC,EAJG,KAKjBC,EAAS,aACTC,EAA2C,KAAtBT,EAAWU,SAAkBF,EAAOG,KAAKX,IAAeA,EAAWY,QAAU,EAClGC,GAAyBJ,GAAqBP,GAAsBF,EAAWY,OAAS,EAE1FE,GAAc,EACdL,IAAsBL,IACxBU,GAAc,GAShB,IA0BMC,EAAmBF,GAAuBT,EAC5C,2BACA,mBAEJ,OAAIE,EACM,qCAAE,cAAC,IAAD,CAAUU,MAAI,EAACC,GAAI,CAAEC,SAAU,aAAe,cAAC,EAAD,OAGxD,gCACE,cAAC3B,EAAD,IACA,eAAC4B,EAAA,EAAD,WACE,sDACA,sBAAMC,KAAK,cAAcC,QAAQ,oBACjC,sBAAMD,KAAK,cAAcC,QAAQ,eAEnC,sBAAMC,SA3BoB,SAACC,GAC7BA,EAAMC,iBACNrB,GAAqB,GAGhBM,IAGLR,EAAc,IACdE,GAAqB,KAkBoBjC,UAAU,UAAjD,SACE,sBAAKA,UAAW6C,EAAhB,UACE,uBAAOU,QAAQ,UAAUvD,UAAU,cAAnC,SAAkDE,EAAMiD,UACxD,uBACEnD,UAAU,YACVwD,KAAK,OACLC,GAAG,MACHC,OAtCkB,SAAAC,GAC1B1B,GAAqB,IAsCb2B,SAjDoB,SAAAP,GAC5BtB,EAAcsB,EAAMQ,OAAOC,OAE3B,IAAMC,EAAOzB,EAAOG,KAAKY,EAAMQ,OAAOC,OAEpC3B,GADW,IAAT4B,IA8CID,MAAOhC,IAET,wBAAQ9B,UAAU,SAASgE,UAAWpB,EAAaqB,QA1D3D,SAAyBZ,GACvBA,EAAMC,iBACNtC,IAAMkD,KAAK,WAAY,CAAEpC,eAAcZ,MAAK,SAAAC,GAAG,OAAIkB,GAAU,MAC1D8B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIhD,UAuD1B,oBAGEuB,GAAuBT,EACrB,mBAAGlC,UAAU,aAAb,6BACA,cCjECuE,MAff,WACE,OACE,qBAAKvE,UAAU,MAAf,SACE,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CACEtB,QAAS,kECLnBuB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"js/main.f7edf5bc.chunk.js","sourcesContent":["import React from 'react'\n\nconst header = () => {\n  return (\n    <div className='header'>\n      <h1> Find Your Local Shinanigans </h1>\n    </div>\n  )\n}\n\nexport default header\n","import './component_css/Card.css'\n\nconst DynCard = (props) => {\n\n  return (\n    <div className='card-item'>\n    <img src={props.imgLink} alt='Activity'/>\n    <p>{props.theTitle}</p>\n    {/*TODO: Update href to be validated for malicious code??*/}\n    <a href={props.urlLink}>\n    <button>Link!</button>\n    </a>\n    </div>\n  )\n}\nexport default DynCard\n","import Header from './Header'\nimport { Helmet, useEffect, useState } from 'react'\nimport DynCard from './Card.js'\nimport './component_css/Output.css'\n//import Back from './Back'\nimport axios from 'axios'\n//import Loading from './Loading'\n\nconst Output = () => {\n  const [sites, setData] = useState([])\n  \n  useEffect(() => {\n    getSites()\n  }, [])\n\n  //DONT USE CONST IT DOESNT ALLOW STATE CHANGE\n  let getSites = async () => {\n    await axios.get('/choices')\n      .then((res) => {\n        setData(res.data)\n        // console.log(res.data)\n        // console.log(sites)\n      })\n  }\n\n  return (\n    <div>\n      <Header>\n        <Helmet>\n          <meta charSet='utf-8' />\n          <title>Found Activities!</title>\n        </Helmet>\n      </Header>\n\n      {/*\n          possibly do a div and insert Dynamic cards with parsed data?\n          Main Progress block -> inserting new DynCards with data from scrapped data\n          7/25 - Workaround found -> take data from Beautiful Soup and format in json file\n          which would be read by Output and place those cards into card-space\n        */}\n      <div className='card-space'>\n        {/* Map the data stored in the Json file to the output page */}\n        {/* TODO WORK WITH DYNCARDS TO OUTPUT CORRECTLY THEN GOOD  */}\n        {sites ? sites.map((values, key) => {\n          // console.log(sites.length)\n          // console.log(sites)\n          return (<DynCard key={key} className='card' theTitle={values.title} imgLink={values.img_link} urlLink={values.url_link}/>) }) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default Output\n","import axios from 'axios'\nimport { useState } from 'react'\nimport Helmet from 'react-helmet'\nimport './component_css/PopUp.css'\nimport { Redirect } from 'react-router-dom'\nimport Header from './Header'\nimport Output from './Output'\n// import Output from './Output'\n\nconst Popup = (props) => {\n  const [enteredZip, setEnteredZip] = useState('')\n  const [enteredZipTouched, setEnteredZipTouched] = useState(false)\n  const [containsLetter, setLetter] = useState(false)\n  const [isSubmitted, setSubmit] = useState(false)\n  const regExp = /[a-zA-Z_]/g\n  const enteredZipIsValid = (enteredZip.trim() !== '' && !regExp.test(enteredZip) && enteredZip.length <= 5)\n  const zipEnteredIsInvalid = ((!enteredZipIsValid && enteredZipTouched) || enteredZip.length > 5)\n\n  let formIsValid = false\n  if (enteredZipIsValid && !containsLetter) {\n    formIsValid = true\n  }\n\n  function zipPostHandler (event) {\n    event.preventDefault()\n    axios.post('/choices', { enteredZip }).then(res => setSubmit(true))\n      .catch(err => console.log(err.data))\n  }\n\n  const zipInputChangeHandler = event => {\n    setEnteredZip(event.target.value)\n    // console.log('in')\n    const cont = regExp.test(event.target.value)\n    if (cont === true) {\n      setLetter(true)\n      // console.log('contains:', containsLetter)\n    } else setLetter(false)\n  }\n\n  const zipInputBlurHandler = _ => {\n    setEnteredZipTouched(true)\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault()\n    setEnteredZipTouched(true)\n    // send zip to backend here\n    // set if valid or not\n    if (!enteredZipIsValid) {\n      return\n    }\n    setEnteredZip('')\n    setEnteredZipTouched(false)\n  }\n\n  const nameInputClasses = zipEnteredIsInvalid || containsLetter\n    ? 'box form-control invalid'\n    : 'box form-control'\n\n  if (isSubmitted) {\n    return (<><Redirect push to={{ pathname: '/output' }} /><Output /></>)\n  }\n  return (\n    <div>\n      <Header />\n      <Helmet>\n        <title>Find Shenanigans </title>\n        <meta name='description' content='App Description' />\n        <meta name='theme-color' content='#008f68' />\n      </Helmet>\n      <form onSubmit={formSubmissionHandler} className='zipForm'>\n        <div className={nameInputClasses}>\n          <label htmlFor='zipcode' className='label-cover'>{props.content}</label>\n          <input\n            className='zip-entry'\n            type='text'\n            id='zip'\n            onBlur={zipInputBlurHandler}\n            onChange={zipInputChangeHandler}\n            value={enteredZip}\n          />\n          <button className='getZip' disabled={!formIsValid} onClick={zipPostHandler}>\n            Submit\n          </button>\n          {(zipEnteredIsInvalid || containsLetter)\n            ? <p className='error-text'>Invalid Zipcode</p>\n            : null}\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Popup\n","import './App.css'\nimport GetArea from './Components/PopUp'\nimport { Route } from 'react-router-dom'\nimport { React } from 'react'\n// import data from '../src/Components/data/data.json';\n\nfunction App () {\n  return (\n    <div className='App'>\n      <Route exact path='/'>\n        <GetArea\n          content={<p>Please Enter Your Zip Code</p>}\n        />\n      </Route>\n    </div>\n  )\n}\n// TODO get rid of Redirect and fetch data from JSON\n// Need to fetch json from here,\n// then after submission change\n// it to allow output to show\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n\n)\n"],"sourceRoot":""}